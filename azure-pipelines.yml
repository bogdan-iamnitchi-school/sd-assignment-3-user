# Docker
# Build and push multiple images to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'cf4a6d48-507b-49df-8f11-f21684310fa1'
  containerRegistry: 'containerregistrybogdaniamnitchi30641.azurecr.io'
  tag: '$(Build.BuildId)'

  # Agent pool name
  agentPoolName: 'local'  # This is where we specify the local agent pool

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: $(agentPoolName)  # Use the local agent pool
    steps:
    # Step 1: Build and push frontend image
#    - task: Docker@2
#      displayName: Build and push frontend image
#      inputs:
#        command: buildAndPush
#        repository: 'frontend'
#        dockerfile: '$(Build.SourcesDirectory)/energy-app-ui/Dockerfile'
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          latest
#
#    - task: Docker@2
#      displayName: Build and push Keycloak image
#      inputs:
#        command: buildAndPush
#        repository: 'keycloak'
#        dockerfile: '$(Build.SourcesDirectory)/docker/keycloak/Dockerfile'
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          latest

    - task: Docker@2
      displayName: Build and push ums mysql image
      inputs:
        command: buildAndPush
        repository: 'ums-mysql'
        dockerfile: '$(Build.SourcesDirectory)/energy-app-ws/user-microservice/mysql/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest

    - task: Docker@2
      displayName: Build and push user microservice image
      inputs:
        command: buildAndPush
        repository: 'user-microservice'
        dockerfile: '$(Build.SourcesDirectory)/energy-app-ws/user-microservice/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest

#    - task: Docker@2
#      displayName: Build and push dms mysql image
#      inputs:
#        command: buildAndPush
#        repository: 'dms-mysql'
#        dockerfile: '$(Build.SourcesDirectory)/energy-app-ws/device-microservice/mysql/Dockerfile'
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          latest
#
#    - task: Docker@2
#      displayName: Build and push device microservice image
#      inputs:
#        command: buildAndPush
#        repository: 'device-microservice'
#        dockerfile: '$(Build.SourcesDirectory)/energy-app-ws/device-microservice/Dockerfile'
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          latest
